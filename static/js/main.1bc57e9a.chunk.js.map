{"version":3,"sources":["fbase.js","components/AuthForm.js","images/intro_img.png","pages/Auth.js","components/Calendar.js","components/MainBorad.js","components/Chat.js","components/MainChatting.js","components/MainOffer.js","components/MainProfile.js","components/Main.js","pages/Home.js","pages/Schedule.js","components/MyChatTable.js","components/MyScdTable.js","pages/Profile.js","components/ChatForm.js","pages/Chatting.js","components/NoticeForm.js","components/NoticeList.js","components/NoticeEventList.js","pages/Notice.js","pages/Secret.js","components/Router.js","components/App.js","index.js"],"names":["initializeApp","apiKey","process","authDomain","projectId","storageBucket","messagingSenderId","appId","authService","getAuth","googleProvider","GoogleAuthProvider","facebookProvider","FacebookAuthProvider","dbService","getFirestore","storageService","getStorage","AuthForm","newAccount","useState","email","setEmail","password","setPassword","error","setError","onChange","event","target","name","value","onSubmit","e","a","preventDefault","createUserWithEmailAndPassword","signInWithEmailAndPassword","koError","code","Box","component","sx","m","width","className","TextField","id","label","variant","type","required","Button","disableElevation","style","position","top","left","transform","bgcolor","border","boxShadow","p","Auth","setNewAccount","open","setOpen","onSocialClick","provider","signInWithPopup","Modal","onClose","Typography","src","introImg","alt","onClick","Switch","inputProps","prev","calStyle","Calendar","userObj","initViewWeek","schedule","setSchedule","scheduleColor","setScheduleColor","scheduleType","setScheduleType","calClickState","setCalClickState","desc","setDesc","startDate","setStartDate","endDate","setEndDate","calPublicId","setCalPublicId","calCreateId","setCalCreateId","handleClose","useEffect","q","query","collection","onSnapshot","querySnapshot","scheduleArray","docs","map","doc","data","alert","contents","title","displayName","start","end","color","creatorId","uid","creatorNickName","createdAt","Date","now","addDoc","scd","updateDoc","editEventHandle","_def","publicId","extendedProps","arrr","split","splice","join","initView","setHt","plugins","dayGridPlugin","interactionPlugin","timeGridPlugin","initialView","headerToolbar","center","right","selectable","select","startStr","endStr","events","eventClick","locale","views","dayGrid","dayMaxEventRows","height","colors","onChangeComplete","scdType","hex","multiline","rows","window","confirm","deleteDoc","noticeStyle","MainBorad","noticeObj","noticeTitle","setNoticeTitle","noticeDesc","setNoticeDesc","columns","dataIndex","key","render","text","ellipsis","onClickRow","record","index","viewCount","rowKey","dataSource","pagination","pageSize","showHeader","size","onRow","mt","Chat","chatObj","isUser","editing","setEditing","message","edit","setEdit","favOnOff","setFavOnOff","onOff","setOnOff","onDeleteClick","fileUrl","deleteObject","ref","toggleEditing","onfavClick","favObj","user_id","cont_id","where","getDocs","favId","favCount","noValidate","autoComplete","maxLength","user_nickName","toLocaleDateString","MainChatting","mainChat","setMainChat","orderBy","chatArray","chat","MainOffer","company","setCompany","phone","setPhone","date","year","getFullYear","month","getMonth","slice","day","getDate","hours","getHours","minutes","getMinutes","offer","then","display","MainProfile","scd1","setScd1","scd2","setScd2","scd3","setScd3","qq","qqSnapshot","qqq","qqqSnapshot","qqqq","qqqqSnapshot","qqArr","qqqArr","qqqqArr","push","length","ItemTop","styled","Paper","theme","typography","body2","padding","spacing","textAlign","palette","secondary","Item","Main","notices","setNotices","admin","setAdmin","noticeArray","forEach","adminId","flexGrow","Grid","container","item","xs","to","Home","containerStyle","Schedule","MyChatTable","isView","setIsView","viewChat","setViewChat","docId","setDocId","align","onMessageClick","onFileUrlClick","onEditClick","onEditComplete","bordered","MyScdTable","scdObj","viewScd","setViewScd","onScdClick","content","backgroundColor","borderRadius","Profile","refreshUser","newDisplayName","setNewDisplayName","myChat","setMyChat","mySchedule","setMySchedule","qs","updateProfile","currentUser","Stack","hiddenLabel","defaultValue","ChatForm","setMessage","file","setFile","fileRef","uuidv4","uploadString","getDownloadURL","fileInput","current","useRef","htmlFor","fontSize","accept","theFile","files","reader","FileReader","onloadend","finishedEvent","result","currentTarget","readAsDataURL","Chatting","chats","setChats","messagesEndRef","scrollIntoView","NoticeForm","nftitle","setNftitle","nfdesc","setNfdesc","nfType","setNfType","noticeInfo","no","onChangeRadio","fullWidth","FormControl","RadioGroup","row","FormControlLabel","control","Radio","NoticeList","NoticeEventList","Notice","notice","setNotice","nevent","setNevent","noticeEventArray","offerStyle","Secret","setOffer","companyName","setCompanyName","companyPhone","setCompanyPhone","companyDesc","setCompanyDesc","offerArray","drawerWidth","openedMixin","transition","transitions","create","easing","sharp","duration","enteringScreen","overflowX","closedMixin","leavingScreen","breakpoints","up","DrawerHeader","alignItems","justifyContent","mixins","toolbar","AppBar","MuiAppBar","shouldForwardProp","prop","zIndex","drawer","marginLeft","Drawer","MuiDrawer","flexShrink","whiteSpace","boxSizing","marginTop","AppRouter","isLoggedIn","useTheme","menu","icon","CssBaseline","Toolbar","IconButton","edge","marginRight","noWrap","direction","Divider","List","ListItem","button","marginBottom","ListItemIcon","ListItemText","primary","signOut","exact","path","element","App","init","setInit","setUserObj","onAuthStateChanged","user","args","Boolean","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.1bc57e9a.chunk.js","sourcesContent":["import { initializeApp } from \"firebase/app\";\r\nimport {\r\n  getAuth,\r\n  GoogleAuthProvider,\r\n  FacebookAuthProvider,\r\n} from \"firebase/auth\";\r\nimport { getFirestore } from \"firebase/firestore\";\r\nimport { getStorage } from \"firebase/storage\";\r\n\r\nconst firebaseConfig = {\r\n  apiKey: process.env.REACT_APP_API_KEY,\r\n  authDomain: process.env.REACT_APP_AUTH_DOMAIN,\r\n  projectId: process.env.REACT_APP_PROJECT_ID,\r\n  storageBucket: process.env.REACT_APP_STORAGE_BUCKET,\r\n  messagingSenderId: process.env.REACT_APP_MESSAGIN_ID,\r\n  appId: process.env.REACT_APP_APP_ID,\r\n};\r\n\r\ninitializeApp(firebaseConfig);\r\n\r\nexport const authService = getAuth();\r\n\r\nexport const googleProvider = new GoogleAuthProvider();\r\nexport const facebookProvider = new FacebookAuthProvider();\r\n\r\nexport const dbService = getFirestore();\r\n\r\nexport const storageService = getStorage();\r\n","import React, { useState } from \"react\";\r\nimport {\r\n  createUserWithEmailAndPassword,\r\n  signInWithEmailAndPassword,\r\n} from \"@firebase/auth\";\r\nimport { authService } from \"fbase\";\r\nimport Box from \"@mui/material/Box\";\r\nimport TextField from \"@mui/material/TextField\";\r\nimport Button from \"@mui/material/Button\";\r\n\r\nconst AuthForm = ({ newAccount }) => {\r\n  const [email, setEmail] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const [error, setError] = useState(\"\");\r\n\r\n  const onChange = (event) => {\r\n    const {\r\n      target: { name, value },\r\n    } = event;\r\n\r\n    if (name === \"email\") {\r\n      setEmail(value);\r\n    } else if (name === \"password\") {\r\n      setPassword(value);\r\n    }\r\n  };\r\n\r\n  // 로그인, 회원가입 클릭 이벤트\r\n  const onSubmit = async (e) => {\r\n    e.preventDefault();\r\n\r\n    try {\r\n      let data;\r\n      if (newAccount) {\r\n        //회원가입\r\n        data = await createUserWithEmailAndPassword(\r\n          authService,\r\n          email,\r\n          password\r\n        );\r\n      } else {\r\n        //로그인\r\n        data = await signInWithEmailAndPassword(authService, email, password);\r\n      }\r\n    } catch (error) {\r\n      let koError = \"\";\r\n      if (error.code === \"auth/weak-password\") {\r\n        koError = \"비밀번호는 6자 이상이어야 합니다.\";\r\n      } else if (error.code === \"auth/email-already-in-use\") {\r\n        koError = \"이미 사용 중인 이메일 주소입니다.\";\r\n      } else if (error.code === \"auth/user-not-found\") {\r\n        koError = \"존재하지 않는 계정 정보입니다.\";\r\n      } else if (error.code === \"auth/wrong-password\") {\r\n        koError = \"올바른 비밀번호를 입력해 주세요.\";\r\n      } else if (error.code === \"auth/invalid-email\") {\r\n        koError = \"올바른 이메을을 입력해 주세요.\";\r\n      } else if (error.code === \"auth/internal-error\") {\r\n        koError = \"올바른 이메을과 비밀번호를 입력해 주세요.\";\r\n      }\r\n      setError(koError);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Box\r\n        component=\"form\"\r\n        sx={{\r\n          \"& > :not(style)\": { m: 1, width: \"25ch\" },\r\n        }}\r\n        // noValidate\r\n        // autoComplete=\"off\"\r\n        onSubmit={onSubmit}\r\n        className=\"auth-form\"\r\n      >\r\n        <div className=\"auth-Input\">\r\n          <TextField\r\n            id=\"outlined-basic\"\r\n            label=\"Email\"\r\n            variant=\"outlined\"\r\n            name=\"email\"\r\n            type=\"email\"\r\n            required\r\n            value={email}\r\n            onChange={onChange}\r\n            className=\"auth-input-inner\"\r\n          />\r\n          <TextField\r\n            id=\"outlined-basic\"\r\n            label=\"Password\"\r\n            variant=\"outlined\"\r\n            name=\"password\"\r\n            type=\"password\"\r\n            required\r\n            value={password}\r\n            onChange={onChange}\r\n            className=\"auth-input-inner\"\r\n          />\r\n        </div>\r\n        <Button\r\n          variant=\"contained\"\r\n          disableElevation\r\n          type=\"submit\"\r\n          className=\"auth-Submit\"\r\n        >\r\n          {newAccount ? \"회원가입\" : \"로그인\"}\r\n        </Button>\r\n      </Box>\r\n      {error && <span className=\"auth-error\">{error}</span>}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default AuthForm;\r\n","export default __webpack_public_path__ + \"static/media/intro_img.8a5eef80.png\";","import React, { useState } from \"react\";\r\nimport AuthForm from \"components/AuthForm\";\r\nimport { authService, googleProvider, facebookProvider } from \"fbase\";\r\nimport { signInWithPopup } from \"firebase/auth\";\r\nimport Button from \"@mui/material/Button\";\r\nimport introImg from \"images/intro_img.png\";\r\nimport Switch from \"@mui/material/Switch\";\r\n\r\nimport Box from \"@mui/material/Box\";\r\nimport Typography from \"@mui/material/Typography\";\r\nimport Modal from \"@mui/material/Modal\";\r\n\r\n// 메인 팝업 style\r\nconst style = {\r\n  position: \"absolute\",\r\n  top: \"50%\",\r\n  left: \"50%\",\r\n  transform: \"translate(-50%, -50%)\",\r\n  width: 450,\r\n  bgcolor: \"background.paper\",\r\n  border: \"2px solid #000\",\r\n  boxShadow: 24,\r\n  p: 4,\r\n};\r\n\r\nconst Auth = () => {\r\n  const [newAccount, setNewAccount] = useState(false);\r\n  const [open, setOpen] = useState(true);\r\n  const handleOpen = () => setOpen(true);\r\n  const handleClose = () => setOpen(false);\r\n\r\n  // 구글, 페이스북 소셜 로그인\r\n  const onSocialClick = async (event) => {\r\n    const {\r\n      target: { name },\r\n    } = event;\r\n\r\n    let provider;\r\n    if (name === \"google\") {\r\n      provider = googleProvider;\r\n    } else if (name === \"facebook\") {\r\n      provider = facebookProvider;\r\n    }\r\n    await signInWithPopup(authService, provider);\r\n  };\r\n\r\n  // 로그인할지 회원가입할지 버튼 체인지\r\n  const toggleAccount = () => {\r\n    setNewAccount((prev) => !prev);\r\n  };\r\n\r\n  // 로그인인지 회원가입인지 체크\r\n  const label = { inputProps: { \"aria-label\": \"Switch demo\" } };\r\n\r\n  return (\r\n    <>\r\n      <div>\r\n        <Modal\r\n          open={open}\r\n          onClose={handleClose}\r\n          aria-labelledby=\"modal-modal-title\"\r\n          aria-describedby=\"modal-modal-description\"\r\n        >\r\n          <Box sx={style}>\r\n            <Typography id=\"modal-modal-description\">\r\n              우측 하단 버튼 클릭 시 회원가입이 가능하며 테스트 계정을 사용하셔도 됩니다!<br /><br />\r\n              id : t1@t1.com<br />\r\n              pw : asd123\r\n            </Typography>\r\n          </Box>\r\n        </Modal>\r\n      </div>\r\n      \r\n      <div id=\"auth-wrap\">\r\n        <img src={introImg} alt=\"\" className=\"auth-img\" />\r\n        <div className=\"auth-container\">\r\n          <AuthForm newAccount={newAccount} />\r\n          <div className=\"auth-social\">\r\n            <Button\r\n              variant=\"outlined\"\r\n              onClick={onSocialClick}\r\n              name=\"google\"\r\n              className=\"auth-social-button\"\r\n            >\r\n              google 로그인\r\n            </Button>\r\n            <Button\r\n              variant=\"outlined\"\r\n              onClick={onSocialClick}\r\n              name=\"facebook\"\r\n              className=\"auth-social-button\"\r\n            >\r\n              facebook 로그인\r\n            </Button>\r\n\r\n            <Switch\r\n              {...label}\r\n              onClick={toggleAccount}\r\n              className=\"auth-toggle\"\r\n            />\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Auth;\r\n","import React, { useEffect, useRef, useState } from \"react\";\r\nimport {\r\n  addDoc,\r\n  collection,\r\n  onSnapshot,\r\n  query,\r\n  doc,\r\n  updateDoc,\r\n  deleteDoc,\r\n  where,\r\n  getDocs,\r\n} from \"@firebase/firestore\";\r\nimport { dbService } from \"fbase\";\r\nimport FullCalendar from \"@fullcalendar/react\";\r\nimport dayGridPlugin from \"@fullcalendar/daygrid\";\r\nimport timeGridPlugin from \"@fullcalendar/timegrid\";\r\nimport interactionPlugin from \"@fullcalendar/interaction\";\r\nimport { CirclePicker } from \"react-color\";\r\nimport Box from \"@mui/material/Box\";\r\nimport Modal from \"@mui/material/Modal\";\r\nimport TextField from \"@mui/material/TextField\";\r\nimport Typography from \"@mui/material/Typography\";\r\n\r\nconst calStyle = {\r\n  position: \"absolute\",\r\n  top: \"50%\",\r\n  left: \"50%\",\r\n  transform: \"translate(-50%, -50%)\",\r\n  width: 500,\r\n  bgcolor: \"background.paper\",\r\n  boxShadow: 24,\r\n  p: 4,\r\n};\r\n\r\nconst Calendar = ({ userObj, initViewWeek }) => {\r\n  const [schedule, setSchedule] = useState([]); // 일정\r\n  const [scheduleColor, setScheduleColor] = useState(\"\"); // 일정 색상\r\n  const [scheduleType, setScheduleType] = useState(0);\r\n  const [open, setOpen] = useState(false); // 일정 입력 폼 오픈\r\n  const [calClickState, setCalClickState] = useState(\"\"); // 신규 작성/수정 및 삭제/읽기 구분\r\n  const [desc, setDesc] = useState(\"\"); // 일정 내용\r\n  const [startDate, setStartDate] = useState(\"\"); // 일정 시작 날짜\r\n  const [endDate, setEndDate] = useState(\"\"); // 일정 끝 날짜\r\n  const [calPublicId, setCalPublicId] = useState(\"\");\r\n  const [calCreateId, setCalCreateId] = useState(\"\");\r\n\r\n  const [aaaaa, setAaaaa] = useState(\"\");\r\n\r\n  // 상태 초기화 및 팝업 닫기\r\n  const handleClose = () => {\r\n    setOpen(false); // 팝업 닫기\r\n    setCalClickState(\"\"); // 일정 여부 초기화\r\n    setCalPublicId(\"\");\r\n    setCalCreateId(\"\");\r\n    setScheduleColor(\"\");\r\n    setScheduleType(0);\r\n    setDesc(\"\");\r\n    setStartDate(\"\");\r\n    setEndDate(\"\");\r\n  };\r\n\r\n  const onChange = (event) => {\r\n    const {\r\n      target: { value },\r\n    } = event;\r\n\r\n    setDesc(value);\r\n  };\r\n\r\n  // 일정 색상 선택\r\n  const handleChangeComplete = (color) => {\r\n    setScheduleColor(color.hex);\r\n\r\n    let scdType;\r\n    switch (color.hex) {\r\n      case \"#00de04\":\r\n        scdType = 0;\r\n        break;\r\n      case \"#3788d8\":\r\n        scdType = 1;\r\n        break;\r\n      case \"#ff0000\":\r\n        scdType = 2;\r\n        break;\r\n      case \"#9b9b9b\":\r\n        scdType = 3;\r\n        break;\r\n    }\r\n    setScheduleType(scdType);\r\n  };\r\n\r\n  // 일정 데이터 가져오기\r\n  useEffect(() => {\r\n    const q = query(collection(dbService, \"scheduler\"));\r\n    onSnapshot(q, (querySnapshot) => {\r\n      const scheduleArray = querySnapshot.docs.map((doc) => ({\r\n        id: doc.id,\r\n        ...doc.data(),\r\n      }));\r\n      setSchedule(scheduleArray);\r\n    });\r\n  }, []);\r\n\r\n  // 시작 일 - 마지막 일 선택시(드래그 선택 or 클릭 선택) 입력 팝업 오픈\r\n  const dateSelectHandle = (event) => {\r\n    setCalClickState(\"new\");\r\n    setOpen(true);\r\n    setStartDate(event.startStr);\r\n    setEndDate(event.endStr);\r\n  };\r\n\r\n  // 일정 신규 등록 및 수정\r\n  const onSubmit = async (event) => {\r\n    event.preventDefault();\r\n\r\n    if (scheduleColor === \"\") {\r\n      return alert(\r\n        \"일정 색상을 선택해 주세요.\\n\\n초록색 : 완료된 일정\\n파란색 : 진행중인 일정\\n빨간색 : 중지된 일정\\n회색 : 진행 예정 일정\"\r\n      );\r\n    }\r\n\r\n    if (calClickState === \"new\") {\r\n      if (desc) {\r\n        const contents = {\r\n          title: `${userObj.displayName} : ${desc}`,\r\n          start: startDate,\r\n          end: endDate,\r\n          color: scheduleColor,\r\n          type: scheduleType,\r\n          creatorId: userObj.uid,\r\n          creatorNickName: userObj.displayName,\r\n          createdAt: Date.now(),\r\n        };\r\n        await addDoc(collection(dbService, \"scheduler\"), contents);\r\n      } else {\r\n        alert(\"일정 내용을 입력해 주세요.\");\r\n      }\r\n    } else if (calClickState === \"edit\") {\r\n      if (userObj.uid === calCreateId) {\r\n        schedule.map((scd) => {\r\n          if (calPublicId === scd.id) {\r\n            updateDoc(doc(dbService, `scheduler/${scd.id}`), {\r\n              title: `${userObj.displayName} : ${desc}`,\r\n              color: scheduleColor,\r\n            });\r\n          }\r\n        });\r\n      }\r\n    }\r\n    handleClose();\r\n  };\r\n\r\n  // 선택한 일정 수정 및 삭제\r\n  const editEventHandle = async (event) => {\r\n    // 일정 내용, 일정 문서 id\r\n    const {\r\n      event: {\r\n        _def: { title, publicId },\r\n      },\r\n    } = event;\r\n\r\n    // 일정 작성자 id\r\n    const {\r\n      event: {\r\n        _def: {\r\n          extendedProps: { creatorId },\r\n        },\r\n      },\r\n    } = event;\r\n    setCalPublicId(publicId);\r\n    setCalCreateId(creatorId);\r\n\r\n    let arrr = title.split(\" : \");\r\n    arrr.splice(0, 1);\r\n\r\n    if (userObj.uid === creatorId) {\r\n      // 내가 쓴 일정이라면, 일정 수정 및 삭제\r\n      setDesc(arrr.join(\":\"));\r\n      setCalClickState(\"edit\");\r\n    } else {\r\n      // 다른 사람의 일정이라면, 읽기\r\n      setDesc(arrr.join(\":\"));\r\n      setCalClickState(\"read\");\r\n    }\r\n    setOpen(true);\r\n  };\r\n\r\n  // 일정 삭제\r\n  const onDeleteScd = (event) => {\r\n    event.preventDefault();\r\n\r\n    schedule.map((scd) => {\r\n      if (calPublicId === scd.id) {\r\n        const ok = window.confirm(\"삭제 하시겠습니까?\");\r\n        if (ok) {\r\n          deleteDoc(doc(dbService, `scheduler/${scd.id}`));\r\n          handleClose();\r\n        } else {\r\n          handleClose();\r\n        }\r\n      }\r\n    });\r\n  };\r\n\r\n  // initViewWeek의 값이 true라면 주간 일정\r\n  // false 또는 빈값이면 월간 일정\r\n  // , 높이 조절\r\n  // Home(true), Schedule(false)\r\n  const initView = initViewWeek ? \"dayGridWeek\" : \"dayGridMonth\";\r\n  const setHt = initViewWeek ? \"250px\" : \"auto\";\r\n\r\n  return (\r\n    <>\r\n      <FullCalendar\r\n        plugins={[dayGridPlugin, interactionPlugin, timeGridPlugin]}\r\n        initialView={initView}\r\n        headerToolbar={{\r\n          left: \"prev\",\r\n          center: \"title\",\r\n          right: \"next\",\r\n        }}\r\n        selectable=\"true\"\r\n        select={dateSelectHandle}\r\n        events={schedule}\r\n        eventClick={editEventHandle}\r\n        locale=\"ko\"\r\n        views={{\r\n          dayGrid: {\r\n            dayMaxEventRows: 3,\r\n          },\r\n        }}\r\n        height={setHt}\r\n      />\r\n\r\n      {open && (\r\n        <Modal\r\n          open={open}\r\n          onClose={handleClose}\r\n          aria-labelledby=\"modal-modal-title\"\r\n          aria-describedby=\"modal-modal-description\"\r\n        >\r\n          {calClickState === \"read\" ? (\r\n            <Box sx={calStyle}>\r\n              <Typography id=\"modal-modal-description\">{desc}</Typography>\r\n            </Box>\r\n          ) : (\r\n            <Box component=\"form\" sx={calStyle} onSubmit={onSubmit}>\r\n              <CirclePicker\r\n                colors={[\"#00de04\", \"#3788d8\", \"#ff0000\", \"#9b9b9b\"]}\r\n                onChangeComplete={handleChangeComplete}\r\n              />\r\n              <br />\r\n              <TextField\r\n                id=\"outlined-multiline-static\"\r\n                label=\"일정 내용\"\r\n                multiline\r\n                rows={4}\r\n                className=\"cal-input\"\r\n                value={desc}\r\n                onChange={onChange}\r\n              />\r\n              <div className=\"cal-submit\">\r\n                {calClickState === \"new\" && (\r\n                  <input type=\"submit\" value=\"등록\" />\r\n                )}\r\n                {calClickState === \"edit\" && (\r\n                  <>\r\n                    <input type=\"submit\" value=\"수정\" />\r\n                    <button onClick={onDeleteScd}>삭제</button>\r\n                  </>\r\n                )}\r\n              </div>\r\n            </Box>\r\n          )}\r\n        </Modal>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Calendar;\r\n","import React, { useState } from \"react\";\r\nimport \"antd/dist/antd.css\";\r\nimport { Table } from \"antd\";\r\nimport Box from \"@mui/material/Box\";\r\nimport Typography from \"@mui/material/Typography\";\r\nimport Modal from \"@mui/material/Modal\";\r\nimport { doc, updateDoc } from \"firebase/firestore\";\r\nimport { dbService } from \"fbase\";\r\n\r\nconst noticeStyle = {\r\n  position: \"absolute\",\r\n  top: \"50%\",\r\n  left: \"50%\",\r\n  transform: \"translate(-50%, -50%)\",\r\n  width: 400,\r\n  bgcolor: \"background.paper\",\r\n  boxShadow: 24,\r\n  p: 4,\r\n};\r\n\r\nconst MainBorad = ({ noticeObj }) => {\r\n  const [open, setOpen] = useState(false); // 공지 내용 활성화 여부\r\n  const handleOpen = () => setOpen(true); // 공지 내용 폼 활성화\r\n  const handleClose = () => setOpen(false); // 공지 내용 폼 비활성화\r\n  const [noticeTitle, setNoticeTitle] = useState(\"\"); // 클릭한 공지 제목\r\n  const [noticeDesc, setNoticeDesc] = useState(\"\"); // 클릭한 공지 내용\r\n\r\n  // 테이블 구조 세팅\r\n  const columns = [\r\n    {\r\n      title: \"제목\",\r\n      dataIndex: \"title\",\r\n      key: \"title\",\r\n      render: (text) => <a>{text}</a>,\r\n      ellipsis: true,\r\n    },\r\n  ];\r\n\r\n  // 클릭한 공지 내용 보여주기\r\n  const onClickRow = async (record, index) => {\r\n    setNoticeTitle(record.title);\r\n    setNoticeDesc(record.desc);\r\n    handleOpen();\r\n    await updateDoc(doc(dbService, `notices/${record.id}`), {\r\n      viewCount: record.viewCount + 1,\r\n    });\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Table\r\n        rowKey={(record) => record.id}\r\n        columns={columns}\r\n        dataSource={noticeObj}\r\n        pagination={{ position: [\"bottomCenter\"], pageSize: 5 }}\r\n        showHeader={false}\r\n        size={\"small\"}\r\n        onRow={(record, index) => {\r\n          return {\r\n            onClick: () => {\r\n              onClickRow(record, index);\r\n            },\r\n          };\r\n        }}\r\n      />\r\n\r\n      {open && (\r\n        <>\r\n          <Modal\r\n            open={open}\r\n            onClose={handleClose}\r\n            aria-labelledby=\"modal-modal-title\"\r\n            aria-describedby=\"modal-modal-description\"\r\n          >\r\n            <Box sx={noticeStyle}>\r\n              <Typography id=\"modal-modal-title\" variant=\"h6\" component=\"h2\">\r\n                {noticeTitle}\r\n              </Typography>\r\n              <hr />\r\n              <Typography id=\"modal-modal-description\" sx={{ mt: 2 }}>\r\n                {noticeDesc}\r\n              </Typography>\r\n            </Box>\r\n          </Modal>\r\n        </>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default MainBorad;\r\n","import React, { useState } from \"react\";\r\nimport {\r\n  deleteDoc,\r\n  doc,\r\n  updateDoc,\r\n  collection,\r\n  query,\r\n  where,\r\n  addDoc,\r\n  getDocs,\r\n} from \"@firebase/firestore\";\r\nimport { deleteObject, ref } from \"@firebase/storage\";\r\nimport { dbService, storageService } from \"fbase\";\r\nimport FavoriteIcon from \"@mui/icons-material/Favorite\";\r\nimport DeleteIcon from \"@mui/icons-material/Delete\";\r\nimport EditIcon from \"@mui/icons-material/Edit\";\r\nimport Box from \"@mui/material/Box\";\r\nimport TextField from \"@mui/material/TextField\";\r\nimport Button from \"@mui/material/Button\";\r\n\r\nconst Chat = ({ chatObj, isUser, userObj }) => {\r\n  const [editing, setEditing] = useState(false); // 수정 상태\r\n  const [edit, setEdit] = useState(chatObj.message); // 수정 메시지\r\n  const [favOnOff, setFavOnOff] = useState(false); // 채팅 좋아요\r\n  const [onOff, setOnOff] = useState(false); // 채팅 좋아요\r\n\r\n  // 메시지 삭제 클릭 이벤트\r\n  const onDeleteClick = async () => {\r\n    const ok = window.confirm(\"삭제하시겠습니까?\");\r\n    if (ok) {\r\n      //delete\r\n      await deleteDoc(doc(dbService, `chats/${chatObj.id}`));\r\n      if (chatObj.fileUrl !== \"\") {\r\n        await deleteObject(ref(storageService, chatObj.fileUrl));\r\n      }\r\n    }\r\n  };\r\n\r\n  // 수정 상태 토글 버튼\r\n  const toggleEditing = () => setEditing((prev) => !prev);\r\n\r\n  // 수정 완료 버튼 클릭 이벤트\r\n  const onSubmit = async (event) => {\r\n    event.preventDefault();\r\n    await updateDoc(doc(dbService, `chats/${chatObj.id}`), {\r\n      message: edit,\r\n    });\r\n    setEditing(false);\r\n  };\r\n\r\n  // 메시지 내용 수정\r\n  const onChange = (event) => {\r\n    const {\r\n      target: { value },\r\n    } = event;\r\n    setEdit(value);\r\n  };\r\n\r\n  // 좋아요 클릭\r\n  const onfavClick = async () => {\r\n    const favObj = {\r\n      user_id: userObj.uid,\r\n      cont_id: chatObj.id,\r\n    };\r\n\r\n    const q = query(\r\n      collection(dbService, \"fav_whether\"),\r\n      where(\"user_id\", \"==\", userObj.uid),\r\n      where(\"cont_id\", \"==\", chatObj.id)\r\n    );\r\n    const querySnapshot = await getDocs(q);\r\n\r\n    let favId;\r\n    querySnapshot.docs.map((doc) => {\r\n      favId = doc.id;\r\n    });\r\n\r\n    if (querySnapshot.size === 1) {\r\n      await deleteDoc(doc(dbService, `fav_whether/${favId}`));\r\n      await updateDoc(doc(dbService, `chats/${chatObj.id}`), {\r\n        favCount: chatObj.favCount - 1,\r\n      });\r\n      setFavOnOff(false);\r\n      setOnOff(false);\r\n    } else if (querySnapshot.size === 0) {\r\n      await addDoc(collection(dbService, \"fav_whether\"), favObj);\r\n      await updateDoc(doc(dbService, `chats/${chatObj.id}`), {\r\n        favCount: chatObj.favCount + 1,\r\n      });\r\n      setFavOnOff(true);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className={isUser ? \"chat-item chat-my\" : \"chat-item\"}>\r\n      {editing ? (\r\n        <>\r\n          <Box\r\n            component=\"form\"\r\n            noValidate\r\n            autoComplete=\"off\"\r\n            onSubmit={onSubmit}\r\n            className=\"chat-edit-form\"\r\n          >\r\n            <TextField\r\n              id=\"outlined-multiline-static\"\r\n              label=\"edit message\"\r\n              multiline\r\n              rows={3}\r\n              onChange={onChange}\r\n              value={edit}\r\n              required\r\n              inputProps={{ maxLength: 200 }}\r\n            />\r\n            <div className=\"chat-edit-form-button\">\r\n              <Button type=\"submit\" variant=\"contained\">\r\n                수정\r\n              </Button>\r\n              <Button onClick={toggleEditing} variant=\"contained\">\r\n                취소\r\n              </Button>\r\n            </div>\r\n          </Box>\r\n        </>\r\n      ) : (\r\n        <>\r\n          <h4 className=\"chat-userName\">{chatObj.user_nickName}</h4>\r\n          {chatObj.fileUrl && (\r\n            <img src={chatObj.fileUrl} alt=\"\" className=\"chat-img\" />\r\n          )}\r\n          <h4>{chatObj.message}</h4>\r\n          <div className=\"chat-info\">\r\n            <span>{new Date(chatObj.createdAt).toLocaleDateString()}</span>\r\n            <div className=\"chat-fav\">\r\n              {!favOnOff && !onOff ? (\r\n                <FavoriteIcon\r\n                  style={{ color: \"gray\" }}\r\n                  onClick={onfavClick}\r\n                  className=\"chat-favIcon\"\r\n                />\r\n              ) : (\r\n                <FavoriteIcon\r\n                  style={{ color: \"red\" }}\r\n                  onClick={onfavClick}\r\n                  className=\"chat-favIcon\"\r\n                />\r\n              )}\r\n              <span>{chatObj.favCount}</span>\r\n            </div>\r\n          </div>\r\n          {isUser && (\r\n            <div className=\"chat-edit-button\">\r\n              <DeleteIcon onClick={onDeleteClick} className=\"chat-delete\" />\r\n              <EditIcon onClick={toggleEditing} className=\"chat-edit\" />\r\n            </div>\r\n          )}\r\n        </>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Chat;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { collection, onSnapshot, orderBy, query } from \"firebase/firestore\";\r\nimport { dbService } from \"fbase\";\r\nimport Chat from \"./Chat\";\r\n\r\nconst MainChatting = ({ userObj }) => {\r\n  const [mainChat, setMainChat] = useState([]);\r\n\r\n  useEffect(async () => {\r\n    // 총 메시지 실시간으로 가져오기\r\n    const q = query(\r\n      collection(dbService, \"chats\"),\r\n      orderBy(\"createdAt\", \"asc\")\r\n    );\r\n    onSnapshot(q, (querySnapshot) => {\r\n      const chatArray = querySnapshot.docs.map((doc) => ({\r\n        id: doc.id,\r\n        ...doc.data(),\r\n      }));\r\n      setMainChat(chatArray);\r\n    });\r\n  }, []);\r\n  return (\r\n    <div className=\"main-chat\">\r\n      {mainChat.map((chat) => (\r\n        <Chat\r\n          key={chat.id}\r\n          chatObj={chat}\r\n          isUser={chat.creatorId === userObj.uid}\r\n          userObj={userObj}\r\n        />\r\n      ))}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default MainChatting;\r\n","import React, { useState } from \"react\";\r\nimport Box from \"@mui/material/Box\";\r\nimport TextField from \"@mui/material/TextField\";\r\nimport Button from \"@mui/material/Button\";\r\nimport { addDoc, collection } from \"firebase/firestore\";\r\nimport { dbService } from \"fbase\";\r\n\r\nconst MainOffer = () => {\r\n  const [company, setCompany] = useState(\"\");\r\n  const [phone, setPhone] = useState(\"\");\r\n  const [desc, setDesc] = useState(\"\");\r\n\r\n  const onChange = (event) => {\r\n    const {\r\n      target: { name, value },\r\n    } = event;\r\n\r\n    if (name === \"company\") {\r\n      setCompany(value);\r\n    } else if (name === \"phone\") {\r\n      setPhone(value);\r\n    } else if (name === \"desc\") {\r\n      setDesc(value);\r\n    }\r\n  };\r\n\r\n  const onSubmit = async (event) => {\r\n    event.preventDefault();\r\n\r\n    if (company === \"\" || phone === \"\" || desc === \"\") {\r\n      alert(\"모든 내용을 입력해 주세요\");\r\n      return;\r\n    }\r\n\r\n    let date = new Date();\r\n    let year = date.getFullYear();\r\n    let month = (\"0\" + (1 + date.getMonth())).slice(-2);\r\n    let day = (\"0\" + date.getDate()).slice(-2);\r\n    let hours = (\"0\" + date.getHours()).slice(-2);\r\n    let minutes = (\"0\" + date.getMinutes()).slice(-2);\r\n\r\n    const offer = {\r\n      company,\r\n      phone,\r\n      desc,\r\n      createdAt: `${year}-${month}-${day}-${hours}:${minutes}`,\r\n    };\r\n    await addDoc(collection(dbService, \"offers\"), offer).then(\r\n      alert(\r\n        \"면접 제안이 성공적으로 이루어졌습니다.\\n제안해 주셔서 감사드리며 빠른 시일 내에 연락드리도록 하겠습니다!\"\r\n      )\r\n    );\r\n    setCompany(\"\");\r\n    setPhone(\"\");\r\n    setDesc(\"\");\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Box\r\n        component=\"form\"\r\n        sx={{\r\n          \"& > :not(style)\": { m: 1 },\r\n        }}\r\n        noValidate\r\n        autoComplete=\"off\"\r\n        onSubmit={onSubmit}\r\n        id=\"mainOffer-form\"\r\n      >\r\n        <TextField\r\n          id=\"standard-basic\"\r\n          label=\"회사명\"\r\n          variant=\"standard\"\r\n          onChange={onChange}\r\n          name=\"company\"\r\n          value={company}\r\n        />\r\n        <TextField\r\n          id=\"standard-basic\"\r\n          label=\"전화번호\"\r\n          variant=\"standard\"\r\n          onChange={onChange}\r\n          name=\"phone\"\r\n          type=\"number\"\r\n          value={phone}\r\n        />\r\n        <TextField\r\n          id=\"outlined-multiline-static\"\r\n          label=\"내용\"\r\n          multiline\r\n          rows={3}\r\n          style={{ display: \"flex\" }}\r\n          onChange={onChange}\r\n          name=\"desc\"\r\n          value={desc}\r\n        />\r\n        <Button variant=\"contained\" type=\"submit\">\r\n          제안하기\r\n        </Button>\r\n      </Box>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default MainOffer;\r\n","import { dbService } from \"fbase\";\r\nimport { collection, getDocs, query, where } from \"firebase/firestore\";\r\nimport React, { useEffect, useState } from \"react\";\r\n\r\nconst MainProfile = ({ userObj }) => {\r\n  const [scd1, setScd1] = useState(0); // 진행중인 일정 개수\r\n  const [scd2, setScd2] = useState(0); // 중지된 일정 개수\r\n  const [scd3, setScd3] = useState(0); // 진행 예정 일정 개수\r\n\r\n  useEffect(async () => {\r\n    const qq = query(\r\n      collection(dbService, \"scheduler\"),\r\n      where(\"creatorId\", \"==\", userObj.uid),\r\n      where(\"type\", \"==\", 1)\r\n    );\r\n    const qqSnapshot = await getDocs(qq);\r\n\r\n    const qqq = query(\r\n      collection(dbService, \"scheduler\"),\r\n      where(\"creatorId\", \"==\", userObj.uid),\r\n      where(\"type\", \"==\", 2)\r\n    );\r\n    const qqqSnapshot = await getDocs(qqq);\r\n\r\n    const qqqq = query(\r\n      collection(dbService, \"scheduler\"),\r\n      where(\"creatorId\", \"==\", userObj.uid),\r\n      where(\"type\", \"==\", 3)\r\n    );\r\n    const qqqqSnapshot = await getDocs(qqqq);\r\n\r\n    let qqArr = [];\r\n    let qqqArr = [];\r\n    let qqqqArr = [];\r\n    qqSnapshot.docs.map((doc) => {\r\n      qqArr.push(doc.data().type);\r\n    });\r\n    qqqSnapshot.docs.map((doc) => {\r\n      qqqArr.push(doc.data().type);\r\n    });\r\n    qqqqSnapshot.docs.map((doc) => {\r\n      qqqqArr.push(doc.data().type);\r\n    });\r\n    setScd1(qqArr.length);\r\n    setScd2(qqqArr.length);\r\n    setScd3(qqqqArr.length);\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"mainProfile-box\">\r\n      <strong className=\"mainProfile-name\">{userObj.displayName}</strong>\r\n      진행중&nbsp;<span className=\"mainprofile-color1\">{scd1}</span>&nbsp;\r\n      중지&nbsp;<span className=\"mainprofile-color2\">{scd2}</span>&nbsp;\r\n      예정&nbsp;<span className=\"mainprofile-color3\">{scd3}</span>&nbsp;\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default MainProfile;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport Calendar from \"./Calendar\";\r\nimport { styled } from \"@mui/material/styles\";\r\nimport Box from \"@mui/material/Box\";\r\nimport Paper from \"@mui/material/Paper\";\r\nimport Grid from \"@mui/material/Grid\";\r\nimport {\r\n  collection,\r\n  getDocs,\r\n  onSnapshot,\r\n  orderBy,\r\n  query,\r\n} from \"firebase/firestore\";\r\nimport { dbService } from \"fbase\";\r\nimport MainBorad from \"./MainBorad\";\r\nimport MainChatting from \"./MainChatting\";\r\nimport { HiPlusCircle } from \"react-icons/hi\";\r\nimport MainOffer from \"./MainOffer\";\r\nimport MainProfile from \"./MainProfile\";\r\n\r\nconst ItemTop = styled(Paper)(({ theme }) => ({\r\n  ...theme.typography.body2,\r\n  padding: theme.spacing(2),\r\n  textAlign: \"left\",\r\n  color: theme.palette.text.secondary,\r\n}));\r\n\r\nconst Item = styled(Paper)(({ theme }) => ({\r\n  ...theme.typography.body2,\r\n  padding: theme.spacing(2),\r\n  textAlign: \"left\",\r\n  color: theme.palette.text.secondary,\r\n  height: theme.spacing(45),\r\n}));\r\n\r\nconst Main = ({ userObj }) => {\r\n  const [notices, setNotices] = useState([]); // 공지, 이벤트 총 게시판\r\n  const [admin, setAdmin] = useState(\"\"); // admin 계정 확인\r\n\r\n  useEffect(async () => {\r\n    const q = query(\r\n      collection(dbService, \"notices\"),\r\n      orderBy(\"createdAt\", \"desc\")\r\n    );\r\n    onSnapshot(q, (querySnapshot) => {\r\n      const noticeArray = querySnapshot.docs.map((doc) => ({\r\n        id: doc.id,\r\n        ...doc.data(),\r\n      }));\r\n      setNotices(noticeArray);\r\n    });\r\n\r\n    const querySnapshot = await getDocs(collection(dbService, \"admin\"));\r\n    querySnapshot.forEach((doc) => {\r\n      setAdmin(doc.data().adminId);\r\n    });\r\n  }, []);\r\n\r\n  return (\r\n    <Box sx={{ flexGrow: 1 }}>\r\n      <Grid container spacing={2}>\r\n        <Grid item xs={12}>\r\n          <ItemTop sx={{ boxShadow: 7 }}>\r\n            <div className=\"main-gridTitle\">\r\n              <MainProfile userObj={userObj} />\r\n              <Link to=\"/profile\">\r\n                <HiPlusCircle size={30} />\r\n              </Link>\r\n            </div>\r\n          </ItemTop>\r\n        </Grid>\r\n        <Grid item xs={6}>\r\n          <Item sx={{ boxShadow: 7 }}>\r\n            <div className=\"main-gridTitle\">\r\n              <h4>금주일정</h4>\r\n              <Link to=\"/schedule\">\r\n                <HiPlusCircle size={30} />\r\n              </Link>\r\n            </div>\r\n            <Calendar userObj={userObj} initViewWeek={true} />\r\n          </Item>\r\n        </Grid>\r\n        <Grid item xs={6}>\r\n          <Item sx={{ boxShadow: 7 }}>\r\n            <div className=\"main-gridTitle\">\r\n              <h4>게시판</h4>\r\n              <Link to=\"/notice\">\r\n                <HiPlusCircle size={30} />\r\n              </Link>\r\n            </div>\r\n            <MainBorad noticeObj={notices} />\r\n          </Item>\r\n        </Grid>\r\n        <Grid item xs={6}>\r\n          <Item sx={{ boxShadow: 7 }}>\r\n            <div className=\"main-gridTitle\">\r\n              <h4>채팅</h4>\r\n              <Link to=\"/chatting\">\r\n                <HiPlusCircle size={30} />\r\n              </Link>\r\n            </div>\r\n            <MainChatting userObj={userObj} />\r\n          </Item>\r\n        </Grid>\r\n        <Grid item xs={6}>\r\n          <Item sx={{ boxShadow: 7 }}>\r\n            <div className=\"main-gridTitle\">\r\n              <h4>면접 제안</h4>\r\n              {userObj.uid === admin && (\r\n                <Link to=\"/secret\">\r\n                  <HiPlusCircle size={30} />\r\n                </Link>\r\n              )}\r\n            </div>\r\n            <MainOffer />\r\n          </Item>\r\n        </Grid>\r\n      </Grid>\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default Main;\r\n","import Main from \"components/Main\";\r\nimport React from \"react\";\r\n\r\nconst Home = ({ userObj, containerStyle }) => {\r\n  return (\r\n    <div style={containerStyle}>\r\n      <Main userObj={userObj} />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Home;\r\n","import Calendar from \"components/Calendar\";\r\nimport React from \"react\";\r\n\r\nconst Schedule = ({ userObj, containerStyle }) => {\r\n  return (\r\n    <div style={containerStyle}>\r\n      <h1>일정 관리</h1>\r\n      <span className=\"scdColor scdColor-complete\">완료</span>\r\n      <span className=\"scdColor scdColor-ing\">진행중</span>\r\n      <span className=\"scdColor scdColor-stop\">중지된 일정</span>\r\n      <span className=\"scdColor scdColor-rv\">진행 예정</span>\r\n      <br /><br />\r\n      <Calendar userObj={userObj} />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Schedule;\r\n","import React, { useState } from \"react\";\r\nimport { deleteDoc, updateDoc, doc } from \"firebase/firestore\";\r\nimport { dbService, storageService } from \"fbase\";\r\nimport { deleteObject, ref } from \"firebase/storage\";\r\nimport { Table, Space } from \"antd\";\r\nimport Box from \"@mui/material/Box\";\r\nimport Modal from \"@mui/material/Modal\";\r\nimport TextField from \"@mui/material/TextField\";\r\nimport Typography from \"@mui/material/Typography\";\r\n\r\nconst MyChatTable = ({ chatObj, style }) => {\r\n  const [isView, setIsView] = useState(false); // 메시지 뷰 팝업\r\n  const [viewChat, setViewChat] = useState(\"\"); // 선택한 열 메시지\r\n  const [editing, setEditing] = useState(false); // 메시지 수정중 여부\r\n  const [edit, setEdit] = useState(chatObj.message); // 선택한 열 (수정)메시지\r\n  const [docId, setDocId] = useState(\"\");\r\n  const handleOpen = () => setEditing(true);\r\n  const handleClose = () => {\r\n    setEditing(false);\r\n    setDocId(\"\");\r\n    setIsView(false);\r\n  };\r\n\r\n  // 테이블 구조 세팅\r\n  const columns = [\r\n    {\r\n      title: \"내용\",\r\n      dataIndex: \"message\",\r\n      key: \"message\",\r\n      align: \"center\",\r\n      ellipsis: true,\r\n      render: (text) => (\r\n        <a\r\n          onClick={() => {\r\n            onMessageClick(text);\r\n          }}\r\n        >\r\n          {text}\r\n        </a>\r\n      ),\r\n    },\r\n    {\r\n      title: \"사진\",\r\n      dataIndex: \"fileUrl\",\r\n      key: \"fileUrl\",\r\n      align: \"center\",\r\n      ellipsis: true,\r\n      width: 80,\r\n      render: (text, record) => {\r\n        return record.fileUrl ? (\r\n          <button\r\n            onClick={() => {\r\n              onFileUrlClick(record);\r\n            }}\r\n          >\r\n            O\r\n          </button>\r\n        ) : (\r\n          \"X\"\r\n        );\r\n      },\r\n    },\r\n    {\r\n      title: \"좋아요\",\r\n      dataIndex: \"favCount\",\r\n      key: \"favCount\",\r\n      align: \"center\",\r\n      width: 80,\r\n    },\r\n    {\r\n      title: \"수정\",\r\n      key: \"action\",\r\n      align: \"center\",\r\n      width: 140,\r\n      render: (text, record) => (\r\n        <Space size=\"middle\">\r\n          <button\r\n            onClick={() => {\r\n              onEditClick(record);\r\n            }}\r\n          >\r\n            수정\r\n          </button>\r\n          <button\r\n            onClick={() => {\r\n              onDeleteClick(record);\r\n            }}\r\n          >\r\n            삭제\r\n          </button>\r\n        </Space>\r\n      ),\r\n    },\r\n  ];\r\n\r\n  // 내용 클릭시\r\n  const onMessageClick = (text) => {\r\n    setIsView(true);\r\n    setViewChat(text);\r\n  };\r\n\r\n  // 사진 버튼 클릭시 새창으로 이미지 띄우기\r\n  const onFileUrlClick = (record) => {\r\n    window.open(record.fileUrl);\r\n  };\r\n\r\n  // 메시지 수정 클릭 이벤트\r\n  const onEditClick = (record) => {\r\n    handleOpen();\r\n    setEdit(record.message);\r\n    setDocId(record.id);\r\n  };\r\n\r\n  // 메시지 수정 완료\r\n  const onEditComplete = async (e) => {\r\n    e.preventDefault();\r\n    await updateDoc(doc(dbService, `chats/${docId}`), {\r\n      message: edit,\r\n    });\r\n    handleClose();\r\n  };\r\n\r\n  // 메시지 내용 수정\r\n  const onChange = (event) => {\r\n    const {\r\n      target: { value },\r\n    } = event;\r\n    setEdit(value);\r\n  };\r\n\r\n  // 메시지 삭제 클릭 이벤트\r\n  const onDeleteClick = async (record) => {\r\n    const ok = window.confirm(\"삭제하시겠습니까?\");\r\n    if (ok) {\r\n      //delete\r\n      await deleteDoc(doc(dbService, `chats/${record.id}`));\r\n      if (record.fileUrl !== \"\") {\r\n        await deleteObject(ref(storageService, record.fileUrl));\r\n      }\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Table\r\n        rowKey={(record) => record.id}\r\n        columns={columns}\r\n        dataSource={chatObj}\r\n        bordered={true}\r\n        pagination={{ position: [\"bottomCenter\"], pageSize: 3 }}\r\n      />\r\n\r\n      {editing && (\r\n        <Modal\r\n          open={editing}\r\n          onClose={handleClose}\r\n          aria-labelledby=\"modal-modal-title\"\r\n          aria-describedby=\"modal-modal-description\"\r\n        >\r\n          <Box\r\n            component=\"form\"\r\n            sx={style}\r\n            autoComplete=\"off\"\r\n            className=\"mychattable-form\"\r\n          >\r\n            <TextField\r\n              id=\"outlined-multiline-static\"\r\n              label=\"내용\"\r\n              multiline\r\n              rows={4}\r\n              type=\"text\"\r\n              onChange={onChange}\r\n              value={edit}\r\n              required\r\n              inputProps={{ maxLength: 200 }}\r\n              className=\"mychattable-form-input\"\r\n            />\r\n            <button onClick={onEditComplete}>수정</button>\r\n          </Box>\r\n        </Modal>\r\n      )}\r\n\r\n      {isView && (\r\n        <Modal\r\n          open={isView}\r\n          onClose={handleClose}\r\n          aria-labelledby=\"modal-modal-title\"\r\n          aria-describedby=\"modal-modal-description\"\r\n        >\r\n          <Box sx={style}>\r\n            <Typography id=\"modal-modal-description\">{viewChat}</Typography>\r\n          </Box>\r\n        </Modal>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default MyChatTable;\r\n","import React, { useState } from \"react\";\r\nimport { Table } from \"antd\";\r\nimport Box from \"@mui/material/Box\";\r\nimport Modal from \"@mui/material/Modal\";\r\nimport Typography from \"@mui/material/Typography\";\r\n\r\nconst MyScdTable = ({ scdObj, style }) => {\r\n  const [isView, setIsView] = useState(false); // 일정 뷰 팝업\r\n  const [viewScd, setViewScd] = useState(\"\"); // 선택한 일정 내용\r\n  const handleClose = () => {\r\n    setViewScd(\"\");\r\n    setIsView(false);\r\n  };\r\n\r\n  // 테이블 구조 세팅\r\n  const columns = [\r\n    {\r\n      title: \"시작일\",\r\n      dataIndex: \"start\",\r\n      key: \"start\",\r\n      align: \"center\",\r\n      width: 200,\r\n    },\r\n    {\r\n      title: \"내용\",\r\n      dataIndex: \"title\",\r\n      key: \"title\",\r\n      ellipsis: true,\r\n      align: \"center\",\r\n      render: (text) => (\r\n        <a\r\n          onClick={() => {\r\n            onScdClick(text);\r\n          }}\r\n        >\r\n          {text}\r\n        </a>\r\n      ),\r\n    },\r\n    {\r\n      title: \"일정 유형\",\r\n      dataIndex: \"color\",\r\n      key: \"color\",\r\n      align: \"center\",\r\n      width: 120,\r\n      render: (text) => (\r\n        <span\r\n          style={{\r\n            content: \" \",\r\n            color: text,\r\n            backgroundColor: text,\r\n            padding: \"4px 12px\",\r\n            borderRadius: \"30px\",\r\n          }}\r\n        ></span>\r\n      ),\r\n    },\r\n  ];\r\n\r\n  // 일정 내용 클릭 이벤트\r\n  const onScdClick = (text) => {\r\n    setIsView(true);\r\n\r\n    let arrr = text.split(\" : \");\r\n    arrr.splice(0, 1);\r\n    setViewScd(arrr.join(\":\"));\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Table\r\n        rowKey={(record) => record.id}\r\n        columns={columns}\r\n        dataSource={scdObj}\r\n        bordered={true}\r\n        pagination={{ position: [\"bottomCenter\"], pageSize: 3 }}\r\n      />\r\n\r\n      {isView && (\r\n        <Modal\r\n          open={isView}\r\n          onClose={handleClose}\r\n          aria-labelledby=\"modal-modal-title\"\r\n          aria-describedby=\"modal-modal-description\"\r\n        >\r\n          <Box sx={style}>\r\n            <Typography id=\"modal-modal-description\">{viewScd}</Typography>\r\n          </Box>\r\n        </Modal>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default MyScdTable;\r\n","import { updateProfile } from \"@firebase/auth\";\r\nimport {\r\n  collection,\r\n  onSnapshot,\r\n  orderBy,\r\n  query,\r\n  where,\r\n} from \"@firebase/firestore\";\r\nimport { authService, dbService } from \"fbase\";\r\nimport React, { useEffect, useState } from \"react\";\r\n// import { useNavigate } from \"react-router\";\r\nimport MyChatTable from \"components/MyChatTable\";\r\nimport MyScdTable from \"components/MyScdTable\";\r\nimport Stack from \"@mui/material/Stack\";\r\nimport TextField from \"@mui/material/TextField\";\r\nimport Button from \"@mui/material/Button\";\r\n\r\nconst style = {\r\n  position: \"absolute\",\r\n  top: \"50%\",\r\n  left: \"50%\",\r\n  transform: \"translate(-50%, -50%)\",\r\n  width: 500,\r\n  bgcolor: \"background.paper\",\r\n  boxShadow: 24,\r\n  p: 4,\r\n};\r\n\r\nconst Profile = ({ userObj, refreshUser, containerStyle }) => {\r\n  // const navigate = useNavigate();\r\n  const [newDisplayName, setNewDisplayName] = useState(userObj.displayName); // 신규 닉네임\r\n  const [myChat, setMyChat] = useState([]); // 내가 쓴 글\r\n  const [mySchedule, setMySchedule] = useState([]); // 내 일정\r\n\r\n  // 로그아웃\r\n  // const onLogOutClick = () => {\r\n  //   authService.signOut();\r\n  //   navigate(\"/\");\r\n  // };\r\n\r\n  // 내가 쓴 메시지 가져와서 setMyChat 담기\r\n  useEffect(async () => {\r\n    const q = query(\r\n      collection(dbService, \"chats\"),\r\n      where(\"creatorId\", \"==\", userObj.uid),\r\n      orderBy(\"createdAt\", \"desc\")\r\n    );\r\n    const qs = query(\r\n      collection(dbService, \"scheduler\"),\r\n      where(\"creatorId\", \"==\", userObj.uid),\r\n      orderBy(\"createdAt\", \"desc\")\r\n    );\r\n\r\n    await onSnapshot(q, (querySnapshot) => {\r\n      const chatArray = querySnapshot.docs.map((doc) => ({\r\n        id: doc.id,\r\n        ...doc.data(),\r\n      }));\r\n      setMyChat(chatArray);\r\n    });\r\n    await onSnapshot(qs, (querySnapshot) => {\r\n      const scheduleArray = querySnapshot.docs.map((doc) => ({\r\n        id: doc.id,\r\n        ...doc.data(),\r\n      }));\r\n      setMySchedule(scheduleArray);\r\n    });\r\n  }, []);\r\n\r\n  const onChange = (event) => {\r\n    const {\r\n      target: { value },\r\n    } = event;\r\n    setNewDisplayName(value);\r\n  };\r\n\r\n  // 닉네임 수정 클릭 이벤트\r\n  const onSubmit = async (event) => {\r\n    event.preventDefault();\r\n    if (userObj.displayName !== newDisplayName) {\r\n      await updateProfile(authService.currentUser, {\r\n        displayName: newDisplayName,\r\n      });\r\n      refreshUser();\r\n      alert(\"닉네임이 변경되었습니다.\");\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div style={containerStyle}>\r\n      <h2>닉네임 변경</h2>\r\n      <Stack\r\n        component=\"form\"\r\n        noValidate\r\n        autoComplete=\"off\"\r\n        onSubmit={onSubmit}\r\n        className=\"profile-nickname\"\r\n      >\r\n        <TextField\r\n          hiddenLabel\r\n          id=\"filled-hidden-label-normal\"\r\n          type=\"text\"\r\n          defaultValue={newDisplayName}\r\n          variant=\"filled\"\r\n          onChange={onChange}\r\n          inputProps={{ maxLength: 20 }}\r\n        />\r\n        <Button type=\"submit\" variant=\"contained\">\r\n          변경\r\n        </Button>\r\n      </Stack>\r\n      {/* <button onClick={onLogOutClick}>로그아웃</button> */}\r\n\r\n      <div className=\"profile-myChat\">\r\n        <h2>나의 채팅</h2>\r\n        <div>\r\n          <MyChatTable chatObj={myChat} style={style} />\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"profile-mySchedule\">\r\n        <h2>나의 일정</h2>\r\n        <div>\r\n          <MyScdTable scdObj={mySchedule} style={style} />\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Profile;\r\n","import { addDoc, collection } from \"@firebase/firestore\";\r\nimport { getDownloadURL, ref, uploadString } from \"@firebase/storage\";\r\nimport { dbService, storageService } from \"fbase\";\r\nimport React, { useRef, useState } from \"react\";\r\nimport { v4 as uuidv4 } from \"uuid\";\r\nimport Box from \"@mui/material/Box\";\r\nimport TextField from \"@mui/material/TextField\";\r\nimport PhotoCameraIcon from \"@mui/icons-material/PhotoCamera\";\r\nimport DeleteIcon from \"@mui/icons-material/Delete\";\r\nimport Button from \"@mui/material/Button\";\r\n\r\nconst ChatForm = ({ userObj }) => {\r\n  const [message, setMessage] = useState(\"\"); // 메시지\r\n  const [file, setFile] = useState(\"\"); // 파일 업로드\r\n  const [favCount, setFavCount] = useState(0); // 채팅 좋아요 개수\r\n\r\n  // 메시지 및 (이미지)파일 추가\r\n  const onSubmit = async (event) => {\r\n    event.preventDefault();\r\n    let fileUrl = \"\";\r\n    if (file !== \"\") {\r\n      const fileRef = ref(storageService, `${userObj.uid}/${uuidv4()}`);\r\n      const response = await uploadString(fileRef, file, \"data_url\");\r\n      fileUrl = await getDownloadURL(fileRef);\r\n    }\r\n    const chat = {\r\n      message,\r\n      createdAt: Date.now(),\r\n      creatorId: userObj.uid,\r\n      favCount,\r\n      fileUrl,\r\n      user_nickName: userObj.displayName,\r\n    };\r\n\r\n    if (message === \"\" && file === \"\") {\r\n      alert(\"메시지를 입력해 주세요\");\r\n    }\r\n\r\n    if (file || message) {\r\n      await addDoc(collection(dbService, \"chats\"), chat);\r\n      setMessage(\"\");\r\n      setFile(\"\");\r\n      fileInput.current.value = null;\r\n    }\r\n  };\r\n\r\n  const onChange = (event) => {\r\n    const {\r\n      target: { value },\r\n    } = event;\r\n    setMessage(value);\r\n  };\r\n\r\n  // (이미지) 파일 업로드\r\n  const onFileChange = (event) => {\r\n    const {\r\n      target: { files },\r\n    } = event;\r\n\r\n    const theFile = files[0];\r\n    const reader = new FileReader();\r\n    reader.onloadend = (finishedEvent) => {\r\n      const {\r\n        currentTarget: { result },\r\n      } = finishedEvent;\r\n\r\n      setFile(result);\r\n    };\r\n    reader.readAsDataURL(theFile);\r\n  };\r\n\r\n  // (이미지) 파일 삭제 후 처리\r\n  const fileInput = useRef();\r\n  const onClearPhotoClick = () => {\r\n    setFile(\"\");\r\n    fileInput.current.value = null;\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Box\r\n        component=\"form\"\r\n        sx={{\r\n          \"& > :not(style)\": { m: 1, width: \"25ch\" },\r\n        }}\r\n        // noValidate\r\n        autoComplete=\"off\"\r\n        onSubmit={onSubmit}\r\n        className=\"chat-Form\"\r\n      >\r\n        <label className=\"chatForm-fileSet\" htmlFor=\"chatForm-file\">\r\n          <PhotoCameraIcon fontSize=\"large\" />\r\n        </label>\r\n        <input\r\n          id=\"chatForm-file\"\r\n          type=\"file\"\r\n          accept=\"image/*\"\r\n          ref={fileInput}\r\n          onChange={onFileChange}\r\n        />\r\n        {file && (\r\n          <div className=\"chatForm-img\">\r\n            <img src={file} alt=\"\" />\r\n            <DeleteIcon onClick={onClearPhotoClick} fontSize=\"large\" />\r\n          </div>\r\n        )}\r\n        <TextField\r\n          id=\"outlined-multiline-static\"\r\n          label=\"send message\"\r\n          multiline\r\n          rows={3}\r\n          value={message}\r\n          onChange={onChange}\r\n          type=\"text\"\r\n          inputProps={{ maxLength: 200 }}\r\n          className=\"chatForm-field\"\r\n        />\r\n        <Button\r\n          variant=\"outlined\"\r\n          disableElevation\r\n          type=\"submit\"\r\n          className=\"chatForm-submit\"\r\n        >\r\n          전송\r\n        </Button>\r\n      </Box>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ChatForm;\r\n","import React, { useState, useEffect, useRef } from \"react\";\r\nimport { collection, onSnapshot, orderBy, query } from \"@firebase/firestore\";\r\nimport Chat from \"components/Chat\";\r\nimport ChatForm from \"components/ChatForm\";\r\nimport { dbService } from \"fbase\";\r\n\r\nconst Chatting = ({ userObj, containerStyle }) => {\r\n  const [chats, setChats] = useState([]); // 입력된 총 메시지\r\n  const messagesEndRef = useRef();\r\n\r\n  // 새로운 채팅 입력시 스크롤 하단으로\r\n  const scrollToBottom = () => {\r\n    messagesEndRef.current.scrollIntoView();\r\n  };\r\n\r\n  useEffect(async () => {\r\n    // 총 메시지 실시간으로 가져오기\r\n    const q = query(\r\n      collection(dbService, \"chats\"),\r\n      orderBy(\"createdAt\", \"asc\")\r\n    );\r\n    onSnapshot(q, (querySnapshot) => {\r\n      const chatArray = querySnapshot.docs.map((doc) => ({\r\n        id: doc.id,\r\n        ...doc.data(),\r\n      }));\r\n      setChats(chatArray);\r\n    });\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    scrollToBottom();\r\n  }, [chats]);\r\n\r\n  return (\r\n    <div className=\"chat-wrap\" style={containerStyle}>\r\n      <div className=\"chat-item-wrap\">\r\n        {chats.map((chat) => (\r\n          <Chat\r\n            key={chat.id}\r\n            chatObj={chat}\r\n            isUser={chat.creatorId === userObj.uid}\r\n            userObj={userObj}\r\n          />\r\n        ))}\r\n        <div ref={messagesEndRef}></div>\r\n      </div>\r\n      <hr />\r\n      <ChatForm userObj={userObj} />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Chatting;\r\n","import React, { useState } from \"react\";\r\nimport Box from \"@mui/material/Box\";\r\nimport Modal from \"@mui/material/Modal\";\r\nimport { addDoc, collection } from \"@firebase/firestore\";\r\nimport { dbService } from \"fbase\";\r\nimport TextField from \"@mui/material/TextField\";\r\nimport Radio from \"@mui/material/Radio\";\r\nimport RadioGroup from \"@mui/material/RadioGroup\";\r\nimport FormControlLabel from \"@mui/material/FormControlLabel\";\r\nimport FormControl from \"@mui/material/FormControl\";\r\n\r\nconst NoticeForm = ({ userObj, noticeStyle, admin }) => {\r\n  const [open, setOpen] = useState(false); // 공지 작성 폼\r\n  const handleOpen = () => setOpen(true); // 공지 작성 폼 활성화\r\n  const handleClose = () => setOpen(false); // 공지 작성 폼 비활성화\r\n  const [nftitle, setNftitle] = useState(\"\"); // 공지 제목\r\n  const [nfdesc, setNfdesc] = useState(\"\"); // 공지 내용\r\n  const [nfType, setNfType] = useState(\"\"); // 공지 타입 (공지, 이벤트)\r\n\r\n  // 공지 제목, 내용 셋팅\r\n  const onChange = (event) => {\r\n    const {\r\n      target: { name, value },\r\n    } = event;\r\n\r\n    if (name === \"title\") {\r\n      setNftitle(value);\r\n    } else if (name === \"desc\") {\r\n      setNfdesc(value);\r\n    }\r\n  };\r\n\r\n  // 공지 등록\r\n  const onSubmit = async (event) => {\r\n    event.preventDefault();\r\n\r\n    if (nfType == \"\") {\r\n      alert(\"게시글 유형을 선택해주세요.\");\r\n      return;\r\n    }\r\n\r\n    let date = new Date();\r\n    let year = date.getFullYear();\r\n    let month = (\"0\" + (1 + date.getMonth())).slice(-2);\r\n    let day = (\"0\" + date.getDate()).slice(-2);\r\n    let hours = (\"0\" + date.getHours()).slice(-2);\r\n    let minutes = (\"0\" + date.getMinutes()).slice(-2);\r\n\r\n    const noticeInfo = {\r\n      no: year + month + day + hours + minutes,\r\n      title: `[${nfType}] ${nftitle}`,\r\n      desc: nfdesc,\r\n      createdAt: Date.now(),\r\n      creatorId: userObj.uid,\r\n      creatorNickName: userObj.displayName,\r\n      viewCount: 0,\r\n      type: nfType,\r\n    };\r\n\r\n    await addDoc(collection(dbService, \"notices\"), noticeInfo);\r\n    handleClose();\r\n  };\r\n\r\n  // 공지, 이벤트 타입\r\n  const onChangeRadio = (e) => {\r\n    setNfType(e.target.value);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      {admin && <button onClick={handleOpen}>클릭</button>}\r\n\r\n      <Modal\r\n        open={open}\r\n        onClose={handleClose}\r\n        aria-labelledby=\"modal-modal-title\"\r\n        aria-describedby=\"modal-modal-description\"\r\n      >\r\n        <Box component=\"form\" onSubmit={onSubmit} sx={noticeStyle}>\r\n          <TextField\r\n            id=\"standard-basic\"\r\n            label=\"제목\"\r\n            variant=\"standard\"\r\n            type=\"text\"\r\n            name=\"title\"\r\n            onChange={onChange}\r\n            fullWidth={true}\r\n            inputProps={{ maxLength: 100 }}\r\n          />\r\n          <br />\r\n          <br />\r\n          <TextField\r\n            id=\"outlined-multiline-static\"\r\n            label=\"내용\"\r\n            multiline\r\n            rows={4}\r\n            type=\"text\"\r\n            name=\"desc\"\r\n            onChange={onChange}\r\n            fullWidth={true}\r\n            inputProps={{ maxLength: 500 }}\r\n          />\r\n          <br />\r\n          <br />\r\n          <FormControl>\r\n            <RadioGroup\r\n              aria-labelledby=\"demo-radio-buttons-group-label\"\r\n              defaultValue=\"female\"\r\n              name=\"radio-buttons-group\"\r\n              row\r\n            >\r\n              <FormControlLabel\r\n                value=\"공지\"\r\n                control={<Radio />}\r\n                label=\"공지\"\r\n                onChange={onChangeRadio}\r\n              />\r\n              <FormControlLabel\r\n                value=\"이벤트\"\r\n                control={<Radio />}\r\n                label=\"이벤트\"\r\n                onChange={onChangeRadio}\r\n              />\r\n            </RadioGroup>\r\n          </FormControl>\r\n          <input type=\"submit\" value=\"게시\" />\r\n        </Box>\r\n      </Modal>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default NoticeForm;\r\n","import React, { useState } from \"react\";\r\nimport \"antd/dist/antd.css\";\r\nimport { Table } from \"antd\";\r\nimport Box from \"@mui/material/Box\";\r\nimport Typography from \"@mui/material/Typography\";\r\nimport Modal from \"@mui/material/Modal\";\r\nimport { doc, updateDoc } from \"firebase/firestore\";\r\nimport { dbService } from \"fbase\";\r\n\r\nconst NoticeList = ({ noticeObj, noticeStyle }) => {\r\n  const [open, setOpen] = useState(false); // 공지 내용 활성화 여부\r\n  const handleOpen = () => setOpen(true); // 공지 내용 폼 활성화\r\n  const handleClose = () => setOpen(false); // 공지 내용 폼 비활성화\r\n  const [noticeTitle, setNoticeTitle] = useState(\"\"); // 클릭한 공지 제목\r\n  const [noticeDesc, setNoticeDesc] = useState(\"\"); // 클릭한 공지 내용\r\n\r\n  // 테이블 구조 세팅\r\n  const columns = [\r\n    {\r\n      title: \"No\",\r\n      dataIndex: \"no\",\r\n      key: \"no\",\r\n      width: 150,\r\n      align: \"center\",\r\n    },\r\n    {\r\n      title: \"제목\",\r\n      dataIndex: \"title\",\r\n      key: \"title\",\r\n      render: (text) => <a>{text}</a>,\r\n      align: \"center\",\r\n      ellipsis: true,\r\n    },\r\n    {\r\n      title: \"조회수\",\r\n      dataIndex: \"viewCount\",\r\n      key: \"viewCount\",\r\n      align: \"center\",\r\n      width: 80,\r\n    },\r\n    {\r\n      title: \"작성자\",\r\n      dataIndex: \"creatorNickName\",\r\n      key: \"creatorNickName\",\r\n      align: \"center\",\r\n      width: 200,\r\n    },\r\n  ];\r\n\r\n  // 클릭한 공지 내용 보여주기\r\n  const onClickRow = async (record, index) => {\r\n    setNoticeTitle(record.title);\r\n    setNoticeDesc(record.desc);\r\n    handleOpen();\r\n    await updateDoc(doc(dbService, `notices/${record.id}`), {\r\n      viewCount: record.viewCount + 1,\r\n    });\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <Table\r\n        rowKey={(record) => record.id}\r\n        columns={columns}\r\n        dataSource={noticeObj}\r\n        bordered={true}\r\n        pagination={{ position: [\"bottomCenter\"], pageSize: 3 }}\r\n        onRow={(record, index) => {\r\n          return {\r\n            onClick: () => {\r\n              onClickRow(record, index);\r\n            },\r\n          };\r\n        }}\r\n      />\r\n\r\n      {open && (\r\n        <>\r\n          <Modal\r\n            open={open}\r\n            onClose={handleClose}\r\n            aria-labelledby=\"modal-modal-title\"\r\n            aria-describedby=\"modal-modal-description\"\r\n          >\r\n            <Box sx={noticeStyle}>\r\n              <Typography id=\"modal-modal-title\" variant=\"h6\" component=\"h2\">\r\n                {noticeTitle}\r\n              </Typography>\r\n              <hr />\r\n              <Typography id=\"modal-modal-description\" sx={{ mt: 2 }}>\r\n                {noticeDesc}\r\n              </Typography>\r\n            </Box>\r\n          </Modal>\r\n        </>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default NoticeList;\r\n","import React, { useState } from \"react\";\r\nimport \"antd/dist/antd.css\";\r\nimport { Table } from \"antd\";\r\nimport Box from \"@mui/material/Box\";\r\nimport Typography from \"@mui/material/Typography\";\r\nimport Modal from \"@mui/material/Modal\";\r\nimport { doc, updateDoc } from \"firebase/firestore\";\r\nimport { dbService } from \"fbase\";\r\n\r\nconst NoticeEventList = ({ noticeObj, noticeStyle }) => {\r\n  const [open, setOpen] = useState(false); // 이벤트 내용 활성화 여부\r\n  const handleOpen = () => setOpen(true); // 이벤트 내용 폼 활성화\r\n  const handleClose = () => setOpen(false); // 이벤트 내용 폼 비활성화\r\n  const [noticeTitle, setNoticeTitle] = useState(\"\"); // 클릭한 이벤트 제목\r\n  const [noticeDesc, setNoticeDesc] = useState(\"\"); // 클릭한 이벤트 내용\r\n\r\n  // 테이블 구조 세팅\r\n  const columns = [\r\n    {\r\n      title: \"No\",\r\n      dataIndex: \"no\",\r\n      key: \"no\",\r\n      width: 150,\r\n      align: \"center\",\r\n    },\r\n    {\r\n      title: \"제목\",\r\n      dataIndex: \"title\",\r\n      key: \"title\",\r\n      render: (text) => <a>{text}</a>,\r\n      align: \"center\",\r\n      ellipsis: true,\r\n    },\r\n    {\r\n      title: \"조회수\",\r\n      dataIndex: \"viewCount\",\r\n      key: \"viewCount\",\r\n      align: \"center\",\r\n      width: 80,\r\n    },\r\n    {\r\n      title: \"작성자\",\r\n      dataIndex: \"creatorNickName\",\r\n      key: \"creatorNickName\",\r\n      align: \"center\",\r\n      width: 200,\r\n    },\r\n  ];\r\n\r\n  // 클릭한 공지 내용 보여주기\r\n  const onClickRow = async (record, index) => {\r\n    setNoticeTitle(record.title);\r\n    setNoticeDesc(record.desc);\r\n    handleOpen();\r\n    await updateDoc(doc(dbService, `notices/${record.id}`), {\r\n      viewCount: record.viewCount + 1,\r\n    });\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <Table\r\n        rowKey={(record) => record.id}\r\n        columns={columns}\r\n        dataSource={noticeObj}\r\n        bordered={true}\r\n        pagination={{ position: [\"bottomCenter\"], pageSize: 3 }}\r\n        onRow={(record, index) => {\r\n          return {\r\n            onClick: () => {\r\n              onClickRow(record, index);\r\n            },\r\n          };\r\n        }}\r\n      />\r\n\r\n      {open && (\r\n        <>\r\n          <Modal\r\n            open={open}\r\n            onClose={handleClose}\r\n            aria-labelledby=\"modal-modal-title\"\r\n            aria-describedby=\"modal-modal-description\"\r\n          >\r\n            <Box sx={noticeStyle}>\r\n              <Typography id=\"modal-modal-title\" variant=\"h6\" component=\"h2\">\r\n                {noticeTitle}\r\n              </Typography>\r\n              <hr />\r\n              <Typography id=\"modal-modal-description\" sx={{ mt: 2 }}>\r\n                {noticeDesc}\r\n              </Typography>\r\n            </Box>\r\n          </Modal>\r\n        </>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default NoticeEventList;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport NoticeForm from \"components/NoticeForm\";\r\nimport {\r\n  collection,\r\n  getDocs,\r\n  onSnapshot,\r\n  orderBy,\r\n  query,\r\n  where,\r\n} from \"firebase/firestore\";\r\nimport { dbService } from \"fbase\";\r\nimport NoticeList from \"components/NoticeList\";\r\nimport NoticeEventList from \"components/NoticeEventList\";\r\n\r\nconst noticeStyle = {\r\n  position: \"absolute\",\r\n  top: \"50%\",\r\n  left: \"50%\",\r\n  transform: \"translate(-50%, -50%)\",\r\n  width: 400,\r\n  bgcolor: \"background.paper\",\r\n  boxShadow: 24,\r\n  p: 4,\r\n};\r\n\r\nconst Notice = ({ userObj, containerStyle, admin }) => {\r\n  const [notice, setNotice] = useState([]); // 공지사항\r\n  const [nevent, setNevent] = useState([]); // 이벤트\r\n\r\n  useEffect(async () => {\r\n    // 공지사항\r\n    const q = query(\r\n      collection(dbService, \"notices\"),\r\n      where(\"type\", \"==\", \"공지\"),\r\n      orderBy(\"createdAt\", \"desc\")\r\n    );\r\n    onSnapshot(q, (querySnapshot) => {\r\n      const noticeArray = querySnapshot.docs.map((doc) => ({\r\n        id: doc.id,\r\n        ...doc.data(),\r\n      }));\r\n      setNotice(noticeArray);\r\n    });\r\n\r\n    // 이벤트\r\n    const qq = query(\r\n      collection(dbService, \"notices\"),\r\n      where(\"type\", \"==\", \"이벤트\"),\r\n      orderBy(\"createdAt\", \"desc\")\r\n    );\r\n    onSnapshot(qq, (querySnapshot) => {\r\n      const noticeEventArray = querySnapshot.docs.map((doc) => ({\r\n        id: doc.id,\r\n        ...doc.data(),\r\n      }));\r\n      setNevent(noticeEventArray);\r\n    });\r\n  }, []);\r\n\r\n  return (\r\n    <div style={containerStyle}>\r\n      <NoticeForm\r\n        userObj={userObj}\r\n        noticeStyle={noticeStyle}\r\n        admin={userObj.uid === admin}\r\n      />\r\n      <div>\r\n        <h2>공지사항</h2>\r\n        <NoticeList noticeObj={notice} noticeStyle={noticeStyle} />\r\n      </div>\r\n      <div>\r\n        <h2>이벤트</h2>\r\n        <NoticeEventList noticeObj={nevent} noticeStyle={noticeStyle} />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Notice;\r\n","import { dbService } from \"fbase\";\r\nimport { collection, onSnapshot, orderBy, query } from \"firebase/firestore\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { Table } from \"antd\";\r\nimport Box from \"@mui/material/Box\";\r\nimport Typography from \"@mui/material/Typography\";\r\nimport Modal from \"@mui/material/Modal\";\r\n\r\nconst offerStyle = {\r\n  position: \"absolute\",\r\n  top: \"50%\",\r\n  left: \"50%\",\r\n  transform: \"translate(-50%, -50%)\",\r\n  width: 700,\r\n  bgcolor: \"background.paper\",\r\n  boxShadow: 24,\r\n  p: 4,\r\n};\r\n\r\nconst Secret = ({ userObj, containerStyle, admin }) => {\r\n  const [offer, setOffer] = useState([]); // 받은 제안\r\n  const [companyName, setCompanyName] = useState(\"\"); // 회사명\r\n  const [companyPhone, setCompanyPhone] = useState(\"\"); // 전화번호\r\n  const [companyDesc, setCompanyDesc] = useState(\"\"); // 내용\r\n  const [open, setOpen] = useState(false); // 공지 내용 활성화 여부\r\n  const handleOpen = () => setOpen(true); // 공지 내용 폼 활성화\r\n  const handleClose = () => setOpen(false); // 공지 내용 폼 비활성화\r\n\r\n  // 테이블 구조 세팅\r\n  const columns = [\r\n    {\r\n      title: \"날짜\",\r\n      dataIndex: \"createdAt\",\r\n      key: \"createdAt\",\r\n      align: \"center\",\r\n      width: 200,\r\n    },\r\n    {\r\n      title: \"회사명\",\r\n      dataIndex: \"company\",\r\n      key: \"company\",\r\n      width: 200,\r\n      align: \"center\",\r\n    },\r\n    {\r\n      title: \"전화번호\",\r\n      dataIndex: \"phone\",\r\n      key: \"phone\",\r\n      align: \"center\",\r\n      width: 200,\r\n    },\r\n    {\r\n      title: \"내용\",\r\n      dataIndex: \"desc\",\r\n      key: \"desc\",\r\n      render: (text) => <a>{text}</a>,\r\n      align: \"center\",\r\n      ellipsis: true,\r\n    },\r\n  ];\r\n\r\n  useEffect(async () => {\r\n    // 총 메시지 실시간으로 가져오기\r\n    const q = query(\r\n      collection(dbService, \"offers\"),\r\n      orderBy(\"createdAt\", \"desc\")\r\n    );\r\n    onSnapshot(q, (querySnapshot) => {\r\n      const offerArray = querySnapshot.docs.map((doc) => ({\r\n        id: doc.id,\r\n        ...doc.data(),\r\n      }));\r\n      setOffer(offerArray);\r\n    });\r\n  }, []);\r\n\r\n  // 클릭한 제안 내용 보여주기\r\n  const onClickRow = (record, index) => {\r\n    setCompanyName(record.company);\r\n    setCompanyPhone(record.phone);\r\n    setCompanyDesc(record.desc);\r\n    handleOpen();\r\n  };\r\n\r\n  return (\r\n    <div style={containerStyle}>\r\n      {userObj.uid === admin ? (\r\n        <Table\r\n          rowKey={(record) => record.id}\r\n          columns={columns}\r\n          dataSource={offer}\r\n          bordered={true}\r\n          pagination={{ position: [\"bottomCenter\"], pageSize: 12 }}\r\n          onRow={(record, index) => {\r\n            return {\r\n              onClick: () => {\r\n                onClickRow(record, index);\r\n              },\r\n            };\r\n          }}\r\n        />\r\n      ) : (\r\n        \"admin 계정으로 확인해 주세요.\"\r\n      )}\r\n\r\n      {open && (\r\n        <>\r\n          <Modal\r\n            open={open}\r\n            onClose={handleClose}\r\n            aria-labelledby=\"modal-modal-title\"\r\n            aria-describedby=\"modal-modal-description\"\r\n          >\r\n            <Box sx={offerStyle}>\r\n              <Typography id=\"modal-modal-title\">회사명 : {companyName}</Typography>\r\n              <hr />\r\n              <Typography id=\"modal-modal-title\">전화번호 : {companyPhone}</Typography>\r\n              <hr />\r\n              <Typography id=\"modal-modal-description\" sx={{ mt: 2 }}>\r\n                {companyDesc}\r\n              </Typography>\r\n            </Box>\r\n          </Modal>\r\n        </>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Secret;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { HashRouter as Router, Route, Routes, Link } from \"react-router-dom\";\r\nimport { styled, useTheme } from \"@mui/material/styles\";\r\nimport Box from \"@mui/material/Box\";\r\nimport MuiDrawer from \"@mui/material/Drawer\";\r\nimport MuiAppBar from \"@mui/material/AppBar\";\r\nimport Toolbar from \"@mui/material/Toolbar\";\r\nimport List from \"@mui/material/List\";\r\nimport CssBaseline from \"@mui/material/CssBaseline\";\r\nimport Typography from \"@mui/material/Typography\";\r\nimport Divider from \"@mui/material/Divider\";\r\nimport IconButton from \"@mui/material/IconButton\";\r\nimport MenuIcon from \"@mui/icons-material/Menu\";\r\nimport ChevronLeftIcon from \"@mui/icons-material/ChevronLeft\";\r\nimport ChevronRightIcon from \"@mui/icons-material/ChevronRight\";\r\nimport ListItem from \"@mui/material/ListItem\";\r\nimport ListItemIcon from \"@mui/material/ListItemIcon\";\r\nimport ListItemText from \"@mui/material/ListItemText\";\r\nimport { FaPowerOff } from \"react-icons/fa\";\r\nimport {\r\n  HiHome,\r\n  HiChatAlt2,\r\n  HiClipboardList,\r\n  HiUserCircle,\r\n  HiCalendar,\r\n} from \"react-icons/hi\";\r\nimport Auth from \"pages/Auth\";\r\nimport Home from \"pages/Home\";\r\nimport Schedule from \"pages/Schedule\";\r\nimport Profile from \"pages/Profile\";\r\nimport Chatting from \"pages/Chatting\";\r\nimport Notice from \"pages/Notice\";\r\nimport Secret from \"pages/Secret\";\r\nimport { authService, dbService } from \"fbase\";\r\nimport { collection, getDocs } from \"firebase/firestore\";\r\n\r\nconst drawerWidth = 200;\r\n\r\nconst openedMixin = (theme) => ({\r\n  width: drawerWidth,\r\n  transition: theme.transitions.create(\"width\", {\r\n    easing: theme.transitions.easing.sharp,\r\n    duration: theme.transitions.duration.enteringScreen,\r\n  }),\r\n  overflowX: \"hidden\",\r\n});\r\n\r\nconst closedMixin = (theme) => ({\r\n  transition: theme.transitions.create(\"width\", {\r\n    easing: theme.transitions.easing.sharp,\r\n    duration: theme.transitions.duration.leavingScreen,\r\n  }),\r\n  overflowX: \"hidden\",\r\n  width: `calc(${theme.spacing(7)} + 1px)`,\r\n  [theme.breakpoints.up(\"sm\")]: {\r\n    width: `calc(${theme.spacing(9)} + 1px)`,\r\n  },\r\n});\r\n\r\nconst DrawerHeader = styled(\"div\")(({ theme }) => ({\r\n  display: \"flex\",\r\n  alignItems: \"center\",\r\n  justifyContent: \"flex-end\",\r\n  padding: theme.spacing(0, 1),\r\n  ...theme.mixins.toolbar,\r\n}));\r\n\r\nconst AppBar = styled(MuiAppBar, {\r\n  shouldForwardProp: (prop) => prop !== \"open\",\r\n})(({ theme, open }) => ({\r\n  zIndex: theme.zIndex.drawer + 1,\r\n  transition: theme.transitions.create([\"width\", \"margin\"], {\r\n    easing: theme.transitions.easing.sharp,\r\n    duration: theme.transitions.duration.leavingScreen,\r\n  }),\r\n  ...(open && {\r\n    marginLeft: drawerWidth,\r\n    width: `calc(100% - ${drawerWidth}px)`,\r\n    transition: theme.transitions.create([\"width\", \"margin\"], {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.enteringScreen,\r\n    }),\r\n  }),\r\n}));\r\n\r\nconst Drawer = styled(MuiDrawer, {\r\n  shouldForwardProp: (prop) => prop !== \"open\",\r\n})(({ theme, open }) => ({\r\n  width: drawerWidth,\r\n  flexShrink: 0,\r\n  whiteSpace: \"nowrap\",\r\n  boxSizing: \"border-box\",\r\n  ...(open && {\r\n    ...openedMixin(theme),\r\n    \"& .MuiDrawer-paper\": openedMixin(theme),\r\n  }),\r\n  ...(!open && {\r\n    ...closedMixin(theme),\r\n    \"& .MuiDrawer-paper\": closedMixin(theme),\r\n  }),\r\n}));\r\n\r\n// 사이드 네비를 포함하지 않는 콘텐츠 영역 스타일\r\nconst containerStyle = {\r\n  padding: \"30px\",\r\n  marginTop: \"70px\",\r\n};\r\n\r\nconst AppRouter = ({ userObj, refreshUser, isLoggedIn }) => {\r\n  const theme = useTheme();\r\n  const [open, setOpen] = useState(true); // 사이드 메뉴 on/off 여부\r\n  const [menu, setMenu] = useState([\r\n    \"\",\r\n    \"schedule\",\r\n    \"chatting\",\r\n    \"notice\",\r\n    \"profile\",\r\n  ]); // 메뉴 link => component\r\n  const [icon, setIcon] = useState([\r\n    <HiHome size={39} />,\r\n    <HiCalendar size={39} />,\r\n    <HiChatAlt2 size={39} />,\r\n    <HiClipboardList size={39} />,\r\n    <HiUserCircle size={39} />,\r\n  ]); // 메뉴 아이콘\r\n  const [admin, setAdmin] = useState(\"\"); // admin 계정 확인\r\n\r\n  // 로그아웃\r\n  const onLogOutClick = () => {\r\n    authService.signOut();\r\n  };\r\n\r\n  const handleDrawerOpen = () => {\r\n    setOpen(true);\r\n  };\r\n\r\n  const handleDrawerClose = () => {\r\n    setOpen(false);\r\n  };\r\n\r\n  useEffect(async () => {\r\n    const querySnapshot = await getDocs(collection(dbService, \"admin\"));\r\n    querySnapshot.forEach((doc) => {\r\n      setAdmin(doc.data().adminId);\r\n    });\r\n  }, []);\r\n\r\n  return (\r\n    <Router>\r\n      <Box sx={{ display: \"flex\" }}>\r\n        {isLoggedIn && (\r\n          <>\r\n            <CssBaseline />\r\n            <AppBar position=\"fixed\" open={open}>\r\n              <Toolbar>\r\n                <IconButton\r\n                  color=\"inherit\"\r\n                  aria-label=\"open drawer\"\r\n                  onClick={handleDrawerOpen}\r\n                  edge=\"start\"\r\n                  sx={{\r\n                    marginRight: \"36px\",\r\n                    ...(open && { display: \"none\" }),\r\n                  }}\r\n                >\r\n                  <MenuIcon />\r\n                </IconButton>\r\n                <Typography variant=\"h6\" noWrap component=\"div\">\r\n                  PKS of Portfolio\r\n                </Typography>\r\n              </Toolbar>\r\n            </AppBar>\r\n            <Drawer variant=\"permanent\" open={open}>\r\n              <DrawerHeader>\r\n                <IconButton onClick={handleDrawerClose}>\r\n                  {theme.direction === \"rtl\" ? (\r\n                    <ChevronRightIcon />\r\n                  ) : (\r\n                    <ChevronLeftIcon />\r\n                  )}\r\n                </IconButton>\r\n              </DrawerHeader>\r\n              <Divider />\r\n              <List>\r\n                {[\"Home\", \"Schedule\", \"Chatting\", \"Notice\", \"Profile\"].map(\r\n                  (text, index) => (\r\n                    <Link to={menu[index]} key={index}>\r\n                      <ListItem\r\n                        button\r\n                        key={text}\r\n                        style={{ marginBottom: \"10px\", marginTop: \"10px\" }}\r\n                      >\r\n                        <ListItemIcon>{icon[index]}</ListItemIcon>\r\n                        <ListItemText\r\n                          primary={text}\r\n                          style={{ color: \"#616161\" }}\r\n                        />\r\n                      </ListItem>\r\n                    </Link>\r\n                  )\r\n                )}\r\n              </List>\r\n              <Link to=\"/\" className=\"logOut-button\">\r\n                <FaPowerOff onClick={onLogOutClick} size={30} />\r\n              </Link>\r\n            </Drawer>\r\n          </>\r\n        )}\r\n\r\n        <Box component=\"main\" sx={{ flexGrow: 1 }}>\r\n          <div className=\"container\">\r\n            <Routes>\r\n              {isLoggedIn ? (\r\n                <>\r\n                  <Route\r\n                    exact\r\n                    path=\"/\"\r\n                    element={\r\n                      <Home userObj={userObj} containerStyle={containerStyle} />\r\n                    }\r\n                  />\r\n                  <Route\r\n                    exact\r\n                    path=\"/schedule\"\r\n                    element={\r\n                      <Schedule\r\n                        userObj={userObj}\r\n                        containerStyle={containerStyle}\r\n                      />\r\n                    }\r\n                  />\r\n                  <Route\r\n                    exact\r\n                    path=\"/profile\"\r\n                    element={\r\n                      <Profile\r\n                        userObj={userObj}\r\n                        refreshUser={refreshUser}\r\n                        containerStyle={containerStyle}\r\n                      />\r\n                    }\r\n                  />\r\n                  <Route\r\n                    exact\r\n                    path=\"/chatting\"\r\n                    element={\r\n                      <Chatting\r\n                        userObj={userObj}\r\n                        containerStyle={containerStyle}\r\n                      />\r\n                    }\r\n                  />\r\n                  <Route\r\n                    exact\r\n                    path=\"/notice\"\r\n                    element={\r\n                      <Notice\r\n                        userObj={userObj}\r\n                        containerStyle={containerStyle}\r\n                        admin={admin}\r\n                      />\r\n                    }\r\n                  />\r\n                  <Route\r\n                    exact\r\n                    path=\"/secret\"\r\n                    element={\r\n                      <Secret\r\n                        userObj={userObj}\r\n                        containerStyle={containerStyle}\r\n                        admin={admin}\r\n                      />\r\n                    }\r\n                  />\r\n                </>\r\n              ) : (\r\n                <>\r\n                  <Route exact path=\"/\" element={<Auth />} />\r\n                </>\r\n              )}\r\n            </Routes>\r\n          </div>\r\n        </Box>\r\n      </Box>\r\n    </Router>\r\n  );\r\n};\r\n\r\nexport default AppRouter;\r\n","import React, { useEffect, useState } from \"react\";\nimport AppRouter from \"components/Router\";\nimport { authService } from \"fbase\";\nimport { updateProfile } from \"@firebase/auth\";\n\nfunction App() {\n  const [init, setInit] = useState(false);\n  // const [isLoggedIn, setIsLoggedIn] = useState(false);\n  const [userObj, setUserObj] = useState(null);\n\n  useEffect(() => {\n    authService.onAuthStateChanged((user) => {\n      if (user) {\n        // setIsLoggedIn(true);\n        // 구글, 페이스북 로그인\n        setUserObj({\n          displayName: user.displayName,\n          uid: user.uid,\n          updateProfile: (args) =>\n            updateProfile(authService.currentUser, {\n              displayName: user.displayName,\n            }),\n        });\n\n        // 신규 가입자 로그인\n        if (user.displayName == null) {\n          setUserObj({\n            displayName: \"신규 가입자\",\n            uid: user.uid,\n            updateProfile: (args) =>\n              updateProfile(authService.currentUser, {\n                displayName: user.displayName,\n              }),\n          });\n        }\n      } else {\n        // setIsLoggedIn(false);\n        setUserObj(null);\n      }\n      setInit(true);\n    });\n  }, []);\n\n  // 닉네임 변경 후 user 새로고침 (실시간으로 반영하기 위함)\n  const refreshUser = () => {\n    const user = authService.currentUser;\n    setUserObj({\n      displayName: user.displayName,\n      uid: user.uid,\n      updateProfile: (args) =>\n        updateProfile(user, { displayName: user.displayName }),\n    });\n  };\n\n  return (\n    <>\n      {init ? (\n        <AppRouter\n          refreshUser={refreshUser}\n          isLoggedIn={Boolean(userObj)}\n          userObj={userObj}\n        />\n      ) : (\n        \"init...\"\n      )}\n      {/* <footer>footer</footer> */}\n    </>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./components/App\";\nimport \"css/style.css\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}